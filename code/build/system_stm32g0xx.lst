ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32g0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/system_stm32g0xx.c"
  18              		.section	.text.SystemInit,"ax",%progbits
  19              		.align	1
  20              		.global	SystemInit
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	SystemInit:
  26              	.LFB158:
   1:Src/system_stm32g0xx.c **** /**
   2:Src/system_stm32g0xx.c ****   ******************************************************************************
   3:Src/system_stm32g0xx.c ****   * @file    system_stm32g0xx.c
   4:Src/system_stm32g0xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32g0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File
   6:Src/system_stm32g0xx.c ****   *
   7:Src/system_stm32g0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32g0xx.c ****   *   user application:
   9:Src/system_stm32g0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32g0xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32g0xx.c ****   *                      the "startup_stm32g0xx.s" file.
  12:Src/system_stm32g0xx.c ****   *
  13:Src/system_stm32g0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32g0xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32g0xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32g0xx.c ****   *
  17:Src/system_stm32g0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32g0xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32g0xx.c ****   *                                 during program execution.
  20:Src/system_stm32g0xx.c ****   *
  21:Src/system_stm32g0xx.c ****   *   After each device reset the HSI (8 MHz then 16 MHz) is used as system clock source.
  22:Src/system_stm32g0xx.c ****   *   Then SystemInit() function is called, in "startup_stm32g0xx.s" file, to
  23:Src/system_stm32g0xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32g0xx.c ****   *
  25:Src/system_stm32g0xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32g0xx.c ****   *=============================================================================
  27:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32g0xx.c ****   *        System Clock source                    | HSI
  29:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  30:Src/system_stm32g0xx.c ****   *        SYSCLK(Hz)                             | 16000000
  31:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  32:Src/system_stm32g0xx.c ****   *        HCLK(Hz)                               | 16000000
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 2


  33:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  34:Src/system_stm32g0xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32g0xx.c ****   *        APB Prescaler                          | 1
  37:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32g0xx.c ****   *        HSI Division factor                    | 1
  39:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32g0xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32g0xx.c ****   *        PLL_N                                  | 8
  43:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32g0xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32g0xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32g0xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32g0xx.c ****   *        Require 48MHz for RNG                  | Disabled
  51:Src/system_stm32g0xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32g0xx.c ****   *=============================================================================
  53:Src/system_stm32g0xx.c ****   ******************************************************************************
  54:Src/system_stm32g0xx.c ****   * @attention
  55:Src/system_stm32g0xx.c ****   *
  56:Src/system_stm32g0xx.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  57:Src/system_stm32g0xx.c ****   * All rights reserved.</center></h2>
  58:Src/system_stm32g0xx.c ****   *
  59:Src/system_stm32g0xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  60:Src/system_stm32g0xx.c ****   * the "License"; You may not use this file except in compliance with the
  61:Src/system_stm32g0xx.c ****   * License. You may obtain a copy of the License at:
  62:Src/system_stm32g0xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  63:Src/system_stm32g0xx.c ****   *
  64:Src/system_stm32g0xx.c ****   ******************************************************************************
  65:Src/system_stm32g0xx.c ****   */
  66:Src/system_stm32g0xx.c **** 
  67:Src/system_stm32g0xx.c **** /** @addtogroup CMSIS
  68:Src/system_stm32g0xx.c ****   * @{
  69:Src/system_stm32g0xx.c ****   */
  70:Src/system_stm32g0xx.c **** 
  71:Src/system_stm32g0xx.c **** /** @addtogroup stm32g0xx_system
  72:Src/system_stm32g0xx.c ****   * @{
  73:Src/system_stm32g0xx.c ****   */
  74:Src/system_stm32g0xx.c **** 
  75:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Includes
  76:Src/system_stm32g0xx.c ****   * @{
  77:Src/system_stm32g0xx.c ****   */
  78:Src/system_stm32g0xx.c **** 
  79:Src/system_stm32g0xx.c **** #include "stm32g0xx.h"
  80:Src/system_stm32g0xx.c **** 
  81:Src/system_stm32g0xx.c **** #if !defined  (HSE_VALUE)
  82:Src/system_stm32g0xx.c **** #define HSE_VALUE    (8000000UL)    /*!< Value of the External oscillator in Hz */
  83:Src/system_stm32g0xx.c **** #endif /* HSE_VALUE */
  84:Src/system_stm32g0xx.c **** 
  85:Src/system_stm32g0xx.c **** #if !defined  (HSI_VALUE)
  86:Src/system_stm32g0xx.c ****   #define HSI_VALUE  (16000000UL)   /*!< Value of the Internal oscillator in Hz*/
  87:Src/system_stm32g0xx.c **** #endif /* HSI_VALUE */
  88:Src/system_stm32g0xx.c **** 
  89:Src/system_stm32g0xx.c **** #if !defined  (LSI_VALUE)
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 3


  90:Src/system_stm32g0xx.c ****  #define LSI_VALUE   (32000UL)     /*!< Value of LSI in Hz*/
  91:Src/system_stm32g0xx.c **** #endif /* LSI_VALUE */
  92:Src/system_stm32g0xx.c **** 
  93:Src/system_stm32g0xx.c **** #if !defined  (LSE_VALUE)
  94:Src/system_stm32g0xx.c ****   #define LSE_VALUE  (32768UL)      /*!< Value of LSE in Hz*/
  95:Src/system_stm32g0xx.c **** #endif /* LSE_VALUE */
  96:Src/system_stm32g0xx.c **** 
  97:Src/system_stm32g0xx.c **** /**
  98:Src/system_stm32g0xx.c ****   * @}
  99:Src/system_stm32g0xx.c ****   */
 100:Src/system_stm32g0xx.c **** 
 101:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_TypesDefinitions
 102:Src/system_stm32g0xx.c ****   * @{
 103:Src/system_stm32g0xx.c ****   */
 104:Src/system_stm32g0xx.c **** 
 105:Src/system_stm32g0xx.c **** /**
 106:Src/system_stm32g0xx.c ****   * @}
 107:Src/system_stm32g0xx.c ****   */
 108:Src/system_stm32g0xx.c **** 
 109:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Defines
 110:Src/system_stm32g0xx.c ****   * @{
 111:Src/system_stm32g0xx.c ****   */
 112:Src/system_stm32g0xx.c **** 
 113:Src/system_stm32g0xx.c **** /************************* Miscellaneous Configuration ************************/
 114:Src/system_stm32g0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 115:Src/system_stm32g0xx.c ****      Internal SRAM. */
 116:Src/system_stm32g0xx.c **** /* #define VECT_TAB_SRAM */
 117:Src/system_stm32g0xx.c **** #define VECT_TAB_OFFSET  0x0U /*!< Vector Table base offset field.
 118:Src/system_stm32g0xx.c ****                                    This value must be a multiple of 0x100. */
 119:Src/system_stm32g0xx.c **** /******************************************************************************/
 120:Src/system_stm32g0xx.c **** /**
 121:Src/system_stm32g0xx.c ****   * @}
 122:Src/system_stm32g0xx.c ****   */
 123:Src/system_stm32g0xx.c **** 
 124:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Macros
 125:Src/system_stm32g0xx.c ****   * @{
 126:Src/system_stm32g0xx.c ****   */
 127:Src/system_stm32g0xx.c **** 
 128:Src/system_stm32g0xx.c **** /**
 129:Src/system_stm32g0xx.c ****   * @}
 130:Src/system_stm32g0xx.c ****   */
 131:Src/system_stm32g0xx.c **** 
 132:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Variables
 133:Src/system_stm32g0xx.c ****   * @{
 134:Src/system_stm32g0xx.c ****   */
 135:Src/system_stm32g0xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 136:Src/system_stm32g0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 137:Src/system_stm32g0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 138:Src/system_stm32g0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 139:Src/system_stm32g0xx.c ****          Note: If you use this function to configure the system clock; then there
 140:Src/system_stm32g0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 141:Src/system_stm32g0xx.c ****                variable is updated automatically.
 142:Src/system_stm32g0xx.c ****   */
 143:Src/system_stm32g0xx.c ****   uint32_t SystemCoreClock = 16000000UL;
 144:Src/system_stm32g0xx.c **** 
 145:Src/system_stm32g0xx.c ****   const uint32_t AHBPrescTable[16UL] = {0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL,
 146:Src/system_stm32g0xx.c ****   const uint32_t APBPrescTable[8UL] =  {0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL};
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 4


 147:Src/system_stm32g0xx.c **** 
 148:Src/system_stm32g0xx.c **** /**
 149:Src/system_stm32g0xx.c ****   * @}
 150:Src/system_stm32g0xx.c ****   */
 151:Src/system_stm32g0xx.c **** 
 152:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_FunctionPrototypes
 153:Src/system_stm32g0xx.c ****   * @{
 154:Src/system_stm32g0xx.c ****   */
 155:Src/system_stm32g0xx.c **** 
 156:Src/system_stm32g0xx.c **** /**
 157:Src/system_stm32g0xx.c ****   * @}
 158:Src/system_stm32g0xx.c ****   */
 159:Src/system_stm32g0xx.c **** 
 160:Src/system_stm32g0xx.c **** /** @addtogroup STM32G0xx_System_Private_Functions
 161:Src/system_stm32g0xx.c ****   * @{
 162:Src/system_stm32g0xx.c ****   */
 163:Src/system_stm32g0xx.c **** 
 164:Src/system_stm32g0xx.c **** /**
 165:Src/system_stm32g0xx.c ****   * @brief  Setup the microcontroller system.
 166:Src/system_stm32g0xx.c ****   * @param  None
 167:Src/system_stm32g0xx.c ****   * @retval None
 168:Src/system_stm32g0xx.c ****   */
 169:Src/system_stm32g0xx.c **** void SystemInit(void)
 170:Src/system_stm32g0xx.c **** {
  27              		.loc 1 170 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 171:Src/system_stm32g0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 172:Src/system_stm32g0xx.c **** #ifdef VECT_TAB_SRAM
 173:Src/system_stm32g0xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 174:Src/system_stm32g0xx.c **** #else
 175:Src/system_stm32g0xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  32              		.loc 1 175 3 view .LVU1
  33              		.loc 1 175 13 is_stmt 0 view .LVU2
  34 0000 024B     		ldr	r3, .L2
  35 0002 8022     		movs	r2, #128
  36 0004 1205     		lsls	r2, r2, #20
  37 0006 9A60     		str	r2, [r3, #8]
 176:Src/system_stm32g0xx.c **** #endif
 177:Src/system_stm32g0xx.c **** }
  38              		.loc 1 177 1 view .LVU3
  39              		@ sp needed
  40 0008 7047     		bx	lr
  41              	.L3:
  42 000a C046     		.align	2
  43              	.L2:
  44 000c 00ED00E0 		.word	-536810240
  45              		.cfi_endproc
  46              	.LFE158:
  48              		.global	__aeabi_uidiv
  49              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  50              		.align	1
  51              		.global	SystemCoreClockUpdate
  52              		.syntax unified
  53              		.code	16
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 5


  54              		.thumb_func
  56              	SystemCoreClockUpdate:
  57              	.LFB159:
 178:Src/system_stm32g0xx.c **** 
 179:Src/system_stm32g0xx.c **** /**
 180:Src/system_stm32g0xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 181:Src/system_stm32g0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 182:Src/system_stm32g0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 183:Src/system_stm32g0xx.c ****   *         other parameters.
 184:Src/system_stm32g0xx.c ****   *
 185:Src/system_stm32g0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 186:Src/system_stm32g0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 187:Src/system_stm32g0xx.c ****   *         based on this variable will be incorrect.
 188:Src/system_stm32g0xx.c ****   *
 189:Src/system_stm32g0xx.c ****   * @note   - The system frequency computed by this function is not the real
 190:Src/system_stm32g0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 191:Src/system_stm32g0xx.c ****   *           constant and the selected clock source:
 192:Src/system_stm32g0xx.c ****   *
 193:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**) / HSI divis
 194:Src/system_stm32g0xx.c ****   *
 195:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 196:Src/system_stm32g0xx.c ****   *
 197:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is LSI, SystemCoreClock will contain the LSI_VALUE
 198:Src/system_stm32g0xx.c ****   *
 199:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is LSE, SystemCoreClock will contain the LSE_VALUE
 200:Src/system_stm32g0xx.c ****   *
 201:Src/system_stm32g0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 202:Src/system_stm32g0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 203:Src/system_stm32g0xx.c ****   *
 204:Src/system_stm32g0xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32g0xx_hal_conf.h file (default value
 205:Src/system_stm32g0xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 206:Src/system_stm32g0xx.c ****   *              in voltage and temperature.
 207:Src/system_stm32g0xx.c ****   *
 208:Src/system_stm32g0xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32g0xx_hal_conf.h file (default value
 209:Src/system_stm32g0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 210:Src/system_stm32g0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 211:Src/system_stm32g0xx.c ****   *              have wrong result.
 212:Src/system_stm32g0xx.c ****   *
 213:Src/system_stm32g0xx.c ****   *         - The result of this function could be not correct when using fractional
 214:Src/system_stm32g0xx.c ****   *           value for HSE crystal.
 215:Src/system_stm32g0xx.c ****   *
 216:Src/system_stm32g0xx.c ****   * @param  None
 217:Src/system_stm32g0xx.c ****   * @retval None
 218:Src/system_stm32g0xx.c ****   */
 219:Src/system_stm32g0xx.c **** void SystemCoreClockUpdate(void)
 220:Src/system_stm32g0xx.c **** {
  58              		.loc 1 220 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 10B5     		push	{r4, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 4, -8
  66              		.cfi_offset 14, -4
 221:Src/system_stm32g0xx.c ****   uint32_t tmp;
  67              		.loc 1 221 3 view .LVU5
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 6


 222:Src/system_stm32g0xx.c ****   uint32_t pllvco;
  68              		.loc 1 222 3 view .LVU6
 223:Src/system_stm32g0xx.c ****   uint32_t pllr;
  69              		.loc 1 223 3 view .LVU7
 224:Src/system_stm32g0xx.c ****   uint32_t pllsource;
  70              		.loc 1 224 3 view .LVU8
 225:Src/system_stm32g0xx.c ****   uint32_t pllm;
  71              		.loc 1 225 3 view .LVU9
 226:Src/system_stm32g0xx.c ****   uint32_t hsidiv;
  72              		.loc 1 226 3 view .LVU10
 227:Src/system_stm32g0xx.c **** 
 228:Src/system_stm32g0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 229:Src/system_stm32g0xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  73              		.loc 1 229 3 view .LVU11
  74              		.loc 1 229 14 is_stmt 0 view .LVU12
  75 0002 284B     		ldr	r3, .L15
  76 0004 9A68     		ldr	r2, [r3, #8]
  77              		.loc 1 229 21 view .LVU13
  78 0006 3823     		movs	r3, #56
  79 0008 1340     		ands	r3, r2
  80              		.loc 1 229 3 view .LVU14
  81 000a 182B     		cmp	r3, #24
  82 000c 37D0     		beq	.L5
  83 000e 1FD8     		bhi	.L6
  84 0010 082B     		cmp	r3, #8
  85 0012 24D0     		beq	.L7
  86 0014 102B     		cmp	r3, #16
  87 0016 3BD1     		bne	.L9
 230:Src/system_stm32g0xx.c ****   {
 231:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 232:Src/system_stm32g0xx.c ****       SystemCoreClock = HSE_VALUE;
 233:Src/system_stm32g0xx.c ****       break;
 234:Src/system_stm32g0xx.c **** 
 235:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_LSI:  /* LSI used as system clock */
 236:Src/system_stm32g0xx.c ****       SystemCoreClock = LSI_VALUE;
 237:Src/system_stm32g0xx.c ****       break;
 238:Src/system_stm32g0xx.c **** 
 239:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_LSE:  /* LSE used as system clock */
 240:Src/system_stm32g0xx.c ****       SystemCoreClock = LSE_VALUE;
 241:Src/system_stm32g0xx.c ****       break;
 242:Src/system_stm32g0xx.c **** 
 243:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 244:Src/system_stm32g0xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 245:Src/system_stm32g0xx.c ****          SYSCLK = PLL_VCO / PLLR
 246:Src/system_stm32g0xx.c ****          */
 247:Src/system_stm32g0xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
  88              		.loc 1 247 7 is_stmt 1 view .LVU15
  89              		.loc 1 247 23 is_stmt 0 view .LVU16
  90 0018 224A     		ldr	r2, .L15
  91 001a D168     		ldr	r1, [r2, #12]
  92              		.loc 1 247 17 view .LVU17
  93 001c 0323     		movs	r3, #3
  94 001e 0B40     		ands	r3, r1
  95              	.LVL0:
 248:Src/system_stm32g0xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL;
  96              		.loc 1 248 7 is_stmt 1 view .LVU18
  97              		.loc 1 248 19 is_stmt 0 view .LVU19
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 7


  98 0020 D268     		ldr	r2, [r2, #12]
  99              		.loc 1 248 49 view .LVU20
 100 0022 1209     		lsrs	r2, r2, #4
 101 0024 0721     		movs	r1, #7
 102 0026 1140     		ands	r1, r2
 103              		.loc 1 248 12 view .LVU21
 104 0028 0131     		adds	r1, r1, #1
 105              	.LVL1:
 249:Src/system_stm32g0xx.c **** 
 250:Src/system_stm32g0xx.c ****       if(pllsource == 0x03UL) /* HSE used as PLL clock source */
 106              		.loc 1 250 7 is_stmt 1 view .LVU22
 107              		.loc 1 250 9 is_stmt 0 view .LVU23
 108 002a 032B     		cmp	r3, #3
 109 002c 2CD0     		beq	.L14
 251:Src/system_stm32g0xx.c ****       {
 252:Src/system_stm32g0xx.c ****         pllvco = (HSE_VALUE / pllm);
 253:Src/system_stm32g0xx.c ****       }
 254:Src/system_stm32g0xx.c ****       else /* HSI used as PLL clock source */
 255:Src/system_stm32g0xx.c ****       {
 256:Src/system_stm32g0xx.c ****           pllvco = (HSI_VALUE / pllm);
 110              		.loc 1 256 11 is_stmt 1 view .LVU24
 111              		.loc 1 256 18 is_stmt 0 view .LVU25
 112 002e 1E48     		ldr	r0, .L15+4
 113 0030 FFF7FEFF 		bl	__aeabi_uidiv
 114              	.LVL2:
 115              	.L13:
 257:Src/system_stm32g0xx.c ****       }
 258:Src/system_stm32g0xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 116              		.loc 1 258 7 is_stmt 1 view .LVU26
 117              		.loc 1 258 30 is_stmt 0 view .LVU27
 118 0034 1B49     		ldr	r1, .L15
 119 0036 CA68     		ldr	r2, [r1, #12]
 120              		.loc 1 258 60 view .LVU28
 121 0038 120A     		lsrs	r2, r2, #8
 122 003a 7F23     		movs	r3, #127
 123 003c 1340     		ands	r3, r2
 124              		.loc 1 258 14 view .LVU29
 125 003e 5843     		muls	r0, r3
 126              	.LVL3:
 259:Src/system_stm32g0xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 127              		.loc 1 259 7 is_stmt 1 view .LVU30
 128              		.loc 1 259 20 is_stmt 0 view .LVU31
 129 0040 C968     		ldr	r1, [r1, #12]
 130              		.loc 1 259 50 view .LVU32
 131 0042 490F     		lsrs	r1, r1, #29
 132              		.loc 1 259 12 view .LVU33
 133 0044 0131     		adds	r1, r1, #1
 134              	.LVL4:
 260:Src/system_stm32g0xx.c **** 
 261:Src/system_stm32g0xx.c ****       SystemCoreClock = pllvco/pllr;
 135              		.loc 1 261 7 is_stmt 1 view .LVU34
 136              		.loc 1 261 31 is_stmt 0 view .LVU35
 137 0046 FFF7FEFF 		bl	__aeabi_uidiv
 138              	.LVL5:
 139              		.loc 1 261 23 view .LVU36
 140 004a 184B     		ldr	r3, .L15+8
 141 004c 1860     		str	r0, [r3]
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 8


 262:Src/system_stm32g0xx.c ****       break;
 142              		.loc 1 262 7 is_stmt 1 view .LVU37
 143 004e 09E0     		b	.L11
 144              	.LVL6:
 145              	.L6:
 229:Src/system_stm32g0xx.c ****   {
 146              		.loc 1 229 3 is_stmt 0 view .LVU38
 147 0050 202B     		cmp	r3, #32
 148 0052 1DD1     		bne	.L9
 240:Src/system_stm32g0xx.c ****       break;
 149              		.loc 1 240 7 is_stmt 1 view .LVU39
 240:Src/system_stm32g0xx.c ****       break;
 150              		.loc 1 240 23 is_stmt 0 view .LVU40
 151 0054 154B     		ldr	r3, .L15+8
 152 0056 8022     		movs	r2, #128
 153 0058 1202     		lsls	r2, r2, #8
 154 005a 1A60     		str	r2, [r3]
 241:Src/system_stm32g0xx.c **** 
 155              		.loc 1 241 7 is_stmt 1 view .LVU41
 156 005c 02E0     		b	.L11
 157              	.L7:
 232:Src/system_stm32g0xx.c ****       break;
 158              		.loc 1 232 7 view .LVU42
 232:Src/system_stm32g0xx.c ****       break;
 159              		.loc 1 232 23 is_stmt 0 view .LVU43
 160 005e 134B     		ldr	r3, .L15+8
 161 0060 134A     		ldr	r2, .L15+12
 162 0062 1A60     		str	r2, [r3]
 233:Src/system_stm32g0xx.c **** 
 163              		.loc 1 233 7 is_stmt 1 view .LVU44
 164              	.L11:
 263:Src/system_stm32g0xx.c ****       
 264:Src/system_stm32g0xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 265:Src/system_stm32g0xx.c ****     default:                /* HSI used as system clock */
 266:Src/system_stm32g0xx.c ****       hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV))>> RCC_CR_HSIDIV_Pos));
 267:Src/system_stm32g0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
 268:Src/system_stm32g0xx.c ****       break;
 269:Src/system_stm32g0xx.c ****   }
 270:Src/system_stm32g0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 271:Src/system_stm32g0xx.c ****   /* Get HCLK prescaler */
 272:Src/system_stm32g0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 165              		.loc 1 272 3 view .LVU45
 166              		.loc 1 272 28 is_stmt 0 view .LVU46
 167 0064 0F4B     		ldr	r3, .L15
 168 0066 9A68     		ldr	r2, [r3, #8]
 169              		.loc 1 272 52 view .LVU47
 170 0068 120A     		lsrs	r2, r2, #8
 171 006a 0F23     		movs	r3, #15
 172 006c 1340     		ands	r3, r2
 173              		.loc 1 272 7 view .LVU48
 174 006e 114A     		ldr	r2, .L15+16
 175 0070 9B00     		lsls	r3, r3, #2
 176 0072 9958     		ldr	r1, [r3, r2]
 177              	.LVL7:
 273:Src/system_stm32g0xx.c ****   /* HCLK clock frequency */
 274:Src/system_stm32g0xx.c ****   SystemCoreClock >>= tmp;
 178              		.loc 1 274 3 is_stmt 1 view .LVU49
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 9


 179              		.loc 1 274 19 is_stmt 0 view .LVU50
 180 0074 0D4A     		ldr	r2, .L15+8
 181 0076 1368     		ldr	r3, [r2]
 182 0078 CB40     		lsrs	r3, r3, r1
 183 007a 1360     		str	r3, [r2]
 275:Src/system_stm32g0xx.c **** }
 184              		.loc 1 275 1 view .LVU51
 185              		@ sp needed
 186 007c 10BD     		pop	{r4, pc}
 187              	.LVL8:
 188              	.L5:
 236:Src/system_stm32g0xx.c ****       break;
 189              		.loc 1 236 7 is_stmt 1 view .LVU52
 236:Src/system_stm32g0xx.c ****       break;
 190              		.loc 1 236 23 is_stmt 0 view .LVU53
 191 007e 0B4B     		ldr	r3, .L15+8
 192 0080 FA22     		movs	r2, #250
 193 0082 D201     		lsls	r2, r2, #7
 194 0084 1A60     		str	r2, [r3]
 237:Src/system_stm32g0xx.c **** 
 195              		.loc 1 237 7 is_stmt 1 view .LVU54
 196 0086 EDE7     		b	.L11
 197              	.LVL9:
 198              	.L14:
 252:Src/system_stm32g0xx.c ****       }
 199              		.loc 1 252 9 view .LVU55
 252:Src/system_stm32g0xx.c ****       }
 200              		.loc 1 252 16 is_stmt 0 view .LVU56
 201 0088 0948     		ldr	r0, .L15+12
 202 008a FFF7FEFF 		bl	__aeabi_uidiv
 203              	.LVL10:
 252:Src/system_stm32g0xx.c ****       }
 204              		.loc 1 252 16 view .LVU57
 205 008e D1E7     		b	.L13
 206              	.LVL11:
 207              	.L9:
 266:Src/system_stm32g0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
 208              		.loc 1 266 7 is_stmt 1 view .LVU58
 266:Src/system_stm32g0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
 209              		.loc 1 266 26 is_stmt 0 view .LVU59
 210 0090 044B     		ldr	r3, .L15
 211 0092 1B68     		ldr	r3, [r3]
 266:Src/system_stm32g0xx.c ****       SystemCoreClock = (HSI_VALUE/hsidiv);
 212              		.loc 1 266 59 view .LVU60
 213 0094 DB0A     		lsrs	r3, r3, #11
 214 0096 0722     		movs	r2, #7
 215 0098 1A40     		ands	r2, r3
 216              	.LVL12:
 267:Src/system_stm32g0xx.c ****       break;
 217              		.loc 1 267 7 is_stmt 1 view .LVU61
 267:Src/system_stm32g0xx.c ****       break;
 218              		.loc 1 267 35 is_stmt 0 view .LVU62
 219 009a 034B     		ldr	r3, .L15+4
 220 009c D340     		lsrs	r3, r3, r2
 267:Src/system_stm32g0xx.c ****       break;
 221              		.loc 1 267 23 view .LVU63
 222 009e 034A     		ldr	r2, .L15+8
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 10


 223              	.LVL13:
 267:Src/system_stm32g0xx.c ****       break;
 224              		.loc 1 267 23 view .LVU64
 225 00a0 1360     		str	r3, [r2]
 268:Src/system_stm32g0xx.c ****   }
 226              		.loc 1 268 7 is_stmt 1 view .LVU65
 227 00a2 DFE7     		b	.L11
 228              	.L16:
 229              		.align	2
 230              	.L15:
 231 00a4 00100240 		.word	1073876992
 232 00a8 0024F400 		.word	16000000
 233 00ac 00000000 		.word	SystemCoreClock
 234 00b0 00127A00 		.word	8000000
 235 00b4 00000000 		.word	AHBPrescTable
 236              		.cfi_endproc
 237              	.LFE159:
 239              		.global	APBPrescTable
 240              		.section	.rodata.APBPrescTable,"a"
 241              		.align	2
 244              	APBPrescTable:
 245 0000 00000000 		.word	0
 246 0004 00000000 		.word	0
 247 0008 00000000 		.word	0
 248 000c 00000000 		.word	0
 249 0010 01000000 		.word	1
 250 0014 02000000 		.word	2
 251 0018 03000000 		.word	3
 252 001c 04000000 		.word	4
 253              		.global	AHBPrescTable
 254              		.section	.rodata.AHBPrescTable,"a"
 255              		.align	2
 258              	AHBPrescTable:
 259 0000 00000000 		.word	0
 260 0004 00000000 		.word	0
 261 0008 00000000 		.word	0
 262 000c 00000000 		.word	0
 263 0010 00000000 		.word	0
 264 0014 00000000 		.word	0
 265 0018 00000000 		.word	0
 266 001c 00000000 		.word	0
 267 0020 01000000 		.word	1
 268 0024 02000000 		.word	2
 269 0028 03000000 		.word	3
 270 002c 04000000 		.word	4
 271 0030 06000000 		.word	6
 272 0034 07000000 		.word	7
 273 0038 08000000 		.word	8
 274 003c 09000000 		.word	9
 275              		.global	SystemCoreClock
 276              		.section	.data.SystemCoreClock,"aw"
 277              		.align	2
 280              	SystemCoreClock:
 281 0000 0024F400 		.word	16000000
 282              		.text
 283              	.Letext0:
 284              		.file 2 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 11


 285              		.file 3 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 286              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 287              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 288              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
ARM GAS  /var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32g0xx.c
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:19     .text.SystemInit:00000000 $t
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:25     .text.SystemInit:00000000 SystemInit
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:44     .text.SystemInit:0000000c $d
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:50     .text.SystemCoreClockUpdate:00000000 $t
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:56     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:231    .text.SystemCoreClockUpdate:000000a4 $d
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:280    .data.SystemCoreClock:00000000 SystemCoreClock
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:258    .rodata.AHBPrescTable:00000000 AHBPrescTable
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:244    .rodata.APBPrescTable:00000000 APBPrescTable
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:241    .rodata.APBPrescTable:00000000 $d
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:255    .rodata.AHBPrescTable:00000000 $d
/var/folders/cw/6cmm0b_n7yj10n1wx8hfx52r0000gn/T//ccFAJIg1.s:277    .data.SystemCoreClock:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
