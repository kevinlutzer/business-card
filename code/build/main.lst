ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB160:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "stm32g0xx_hal_gpio.h"
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** 
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** void display_led(uint16_t col, uint16_t row);
  51:Src/main.c    **** void display_8_bit_frame(uint8_t msg[7]);
  52:Src/main.c    **** 
  53:Src/main.c    **** const uint8_t smile[7] = {
  54:Src/main.c    ****   0b00000000,
  55:Src/main.c    ****   0b01100110,
  56:Src/main.c    ****   0b01100110,
  57:Src/main.c    ****   0b00000000,
  58:Src/main.c    ****   0b01000010,
  59:Src/main.c    ****   0b01111110,
  60:Src/main.c    ****   0b00000000,
  61:Src/main.c    **** };
  62:Src/main.c    **** 
  63:Src/main.c    **** const uint8_t hi[7] = {
  64:Src/main.c    ****   0b10010111,
  65:Src/main.c    ****   0b10010010,
  66:Src/main.c    ****   0b10010010,
  67:Src/main.c    ****   0b11110010,
  68:Src/main.c    ****   0b10010010,
  69:Src/main.c    ****   0b10010010,
  70:Src/main.c    ****   0b10010111,
  71:Src/main.c    **** };
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PV */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** void SystemClock_Config(void);
  77:Src/main.c    **** static void MX_GPIO_Init(void);
  78:Src/main.c    **** /* USER CODE BEGIN PFP */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PFP */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  83:Src/main.c    **** /* USER CODE BEGIN 0 */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE END 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /**
  88:Src/main.c    ****   * @brief  The application entry point.
  89:Src/main.c    ****   * @retval int
  90:Src/main.c    ****   */
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 3


  91:Src/main.c    **** int main(void)
  92:Src/main.c    **** {
  93:Src/main.c    ****   /* USER CODE BEGIN 1 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END 1 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Src/main.c    ****   HAL_Init();
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE BEGIN Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Configure the system clock */
 107:Src/main.c    ****   SystemClock_Config();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Initialize all configured peripherals */
 114:Src/main.c    ****   MX_GPIO_Init();
 115:Src/main.c    ****   /* USER CODE BEGIN 2 */
 116:Src/main.c    ****   
 117:Src/main.c    ****   /* USER CODE END 2 */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Infinite loop */
 120:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 121:Src/main.c    ****   while (1)
 122:Src/main.c    ****   {
 123:Src/main.c    ****     /* USER CODE END WHILE */
 124:Src/main.c    **** 
 125:Src/main.c    ****     /* USER CODE BEGIN 3 */
 126:Src/main.c    ****     for(int i = 0; i < 10000; i ++ ) {
 127:Src/main.c    ****       display_8_bit_frame(smile);
 128:Src/main.c    ****     }
 129:Src/main.c    **** 
 130:Src/main.c    ****     for(int i = 0; i < 10000; i ++ ) {
 131:Src/main.c    ****       display_8_bit_frame(hi);
 132:Src/main.c    ****     }
 133:Src/main.c    **** 
 134:Src/main.c    ****   }
 135:Src/main.c    ****   /* USER CODE END 3 */
 136:Src/main.c    **** }
 137:Src/main.c    **** 
 138:Src/main.c    **** /**
 139:Src/main.c    ****   * @brief System Clock Configuration
 140:Src/main.c    ****   * @retval None
 141:Src/main.c    ****   */
 142:Src/main.c    **** void SystemClock_Config(void)
 143:Src/main.c    **** {
 144:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 146:Src/main.c    **** 
 147:Src/main.c    ****   /** Configure the main internal regulator output voltage 
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 4


 148:Src/main.c    ****   */
 149:Src/main.c    ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 150:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 151:Src/main.c    ****   */
 152:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 153:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 154:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 155:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 157:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158:Src/main.c    ****   {
 159:Src/main.c    ****     Error_Handler();
 160:Src/main.c    ****   }
 161:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 162:Src/main.c    ****   */
 163:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 164:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 165:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 166:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 168:Src/main.c    **** 
 169:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 170:Src/main.c    ****   {
 171:Src/main.c    ****     Error_Handler();
 172:Src/main.c    ****   }
 173:Src/main.c    **** }
 174:Src/main.c    **** 
 175:Src/main.c    **** /**
 176:Src/main.c    ****   * @brief GPIO Initialization Function
 177:Src/main.c    ****   * @param None
 178:Src/main.c    ****   * @retval None
 179:Src/main.c    ****   */
 180:Src/main.c    **** static void MX_GPIO_Init(void)
 181:Src/main.c    **** {
  26              		.loc 1 181 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 182:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 182 3 view .LVU1
  40              		.loc 1 182 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 01A8     		add	r0, sp, #4
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 183:Src/main.c    **** 
 184:Src/main.c    ****   /* GPIO Ports Clock Enable */
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 5


 185:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  46              		.loc 1 185 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 185 3 view .LVU4
  49              		.loc 1 185 3 view .LVU5
  50 000e 0E4B     		ldr	r3, .L2
  51 0010 5A6B     		ldr	r2, [r3, #52]
  52 0012 0124     		movs	r4, #1
  53 0014 2243     		orrs	r2, r4
  54 0016 5A63     		str	r2, [r3, #52]
  55              		.loc 1 185 3 view .LVU6
  56 0018 5B6B     		ldr	r3, [r3, #52]
  57 001a 2340     		ands	r3, r4
  58 001c 0093     		str	r3, [sp]
  59              		.loc 1 185 3 view .LVU7
  60 001e 009B     		ldr	r3, [sp]
  61              	.LBE2:
  62              		.loc 1 185 3 view .LVU8
 186:Src/main.c    **** 
 187:Src/main.c    ****   /*Configure GPIO pin Output Level */
 188:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, PINA_Pin|PINB_Pin|PINC_Pin|PIND_Pin 
  63              		.loc 1 188 3 view .LVU9
  64 0020 A025     		movs	r5, #160
  65 0022 ED05     		lsls	r5, r5, #23
  66 0024 0022     		movs	r2, #0
  67 0026 FF21     		movs	r1, #255
  68 0028 2800     		movs	r0, r5
  69 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  70              	.LVL1:
 189:Src/main.c    ****                           |PINE_Pin|PINF_Pin|PING_Pin|PINH_Pin, GPIO_PIN_RESET);
 190:Src/main.c    **** 
 191:Src/main.c    ****   /*Configure GPIO pins : PINA_Pin PINB_Pin PINC_Pin PIND_Pin 
 192:Src/main.c    ****                            PINE_Pin PINF_Pin PING_Pin PINH_Pin */
 193:Src/main.c    ****   GPIO_InitStruct.Pin = PINA_Pin|PINB_Pin|PINC_Pin|PIND_Pin 
  71              		.loc 1 193 3 view .LVU10
  72              		.loc 1 193 23 is_stmt 0 view .LVU11
  73 002e FF23     		movs	r3, #255
  74 0030 0193     		str	r3, [sp, #4]
 194:Src/main.c    ****                           |PINE_Pin|PINF_Pin|PING_Pin|PINH_Pin;
 195:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  75              		.loc 1 195 3 is_stmt 1 view .LVU12
  76              		.loc 1 195 24 is_stmt 0 view .LVU13
  77 0032 0294     		str	r4, [sp, #8]
 196:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  78              		.loc 1 196 3 is_stmt 1 view .LVU14
  79              		.loc 1 196 24 is_stmt 0 view .LVU15
  80 0034 0023     		movs	r3, #0
  81 0036 0393     		str	r3, [sp, #12]
 197:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  82              		.loc 1 197 3 is_stmt 1 view .LVU16
  83              		.loc 1 197 25 is_stmt 0 view .LVU17
  84 0038 0493     		str	r3, [sp, #16]
 198:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  85              		.loc 1 198 3 is_stmt 1 view .LVU18
  86 003a 01A9     		add	r1, sp, #4
  87 003c 2800     		movs	r0, r5
  88 003e FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 6


  89              	.LVL2:
 199:Src/main.c    **** 
 200:Src/main.c    **** }
  90              		.loc 1 200 1 is_stmt 0 view .LVU19
  91 0042 07B0     		add	sp, sp, #28
  92              		@ sp needed
  93 0044 30BD     		pop	{r4, r5, pc}
  94              	.L3:
  95 0046 C046     		.align	2
  96              	.L2:
  97 0048 00100240 		.word	1073876992
  98              		.cfi_endproc
  99              	.LFE160:
 101              		.section	.text.SystemClock_Config,"ax",%progbits
 102              		.align	1
 103              		.global	SystemClock_Config
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 107              		.fpu softvfp
 109              	SystemClock_Config:
 110              	.LFB159:
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 111              		.loc 1 143 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 72
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 10B5     		push	{r4, lr}
 116              	.LCFI2:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
 120 0002 92B0     		sub	sp, sp, #72
 121              	.LCFI3:
 122              		.cfi_def_cfa_offset 80
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 144 3 view .LVU21
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124              		.loc 1 144 22 is_stmt 0 view .LVU22
 125 0004 3422     		movs	r2, #52
 126 0006 0021     		movs	r1, #0
 127 0008 05A8     		add	r0, sp, #20
 128 000a FFF7FEFF 		bl	memset
 129              	.LVL3:
 145:Src/main.c    **** 
 130              		.loc 1 145 3 is_stmt 1 view .LVU23
 145:Src/main.c    **** 
 131              		.loc 1 145 22 is_stmt 0 view .LVU24
 132 000e 1022     		movs	r2, #16
 133 0010 0021     		movs	r1, #0
 134 0012 01A8     		add	r0, sp, #4
 135 0014 FFF7FEFF 		bl	memset
 136              	.LVL4:
 149:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 137              		.loc 1 149 3 is_stmt 1 view .LVU25
 138 0018 8020     		movs	r0, #128
 139 001a 8000     		lsls	r0, r0, #2
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 7


 140 001c FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 141              	.LVL5:
 152:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 142              		.loc 1 152 3 view .LVU26
 152:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 143              		.loc 1 152 36 is_stmt 0 view .LVU27
 144 0020 0223     		movs	r3, #2
 145 0022 0593     		str	r3, [sp, #20]
 153:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 146              		.loc 1 153 3 is_stmt 1 view .LVU28
 153:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 147              		.loc 1 153 30 is_stmt 0 view .LVU29
 148 0024 FE33     		adds	r3, r3, #254
 149 0026 0893     		str	r3, [sp, #32]
 154:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 150              		.loc 1 154 3 is_stmt 1 view .LVU30
 154:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 151              		.loc 1 154 28 is_stmt 0 view .LVU31
 152 0028 0024     		movs	r4, #0
 153 002a 0994     		str	r4, [sp, #36]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 154              		.loc 1 155 3 is_stmt 1 view .LVU32
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 155              		.loc 1 155 41 is_stmt 0 view .LVU33
 156 002c C03B     		subs	r3, r3, #192
 157 002e 0A93     		str	r3, [sp, #40]
 156:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158              		.loc 1 156 3 is_stmt 1 view .LVU34
 156:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159              		.loc 1 156 34 is_stmt 0 view .LVU35
 160 0030 0C94     		str	r4, [sp, #48]
 157:Src/main.c    ****   {
 161              		.loc 1 157 3 is_stmt 1 view .LVU36
 157:Src/main.c    ****   {
 162              		.loc 1 157 7 is_stmt 0 view .LVU37
 163 0032 05A8     		add	r0, sp, #20
 164 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 165              	.LVL6:
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 166              		.loc 1 163 3 is_stmt 1 view .LVU38
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 167              		.loc 1 163 31 is_stmt 0 view .LVU39
 168 0038 0723     		movs	r3, #7
 169 003a 0193     		str	r3, [sp, #4]
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170              		.loc 1 165 3 is_stmt 1 view .LVU40
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171              		.loc 1 165 34 is_stmt 0 view .LVU41
 172 003c 0294     		str	r4, [sp, #8]
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 173              		.loc 1 166 3 is_stmt 1 view .LVU42
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 174              		.loc 1 166 35 is_stmt 0 view .LVU43
 175 003e 0394     		str	r4, [sp, #12]
 167:Src/main.c    **** 
 176              		.loc 1 167 3 is_stmt 1 view .LVU44
 167:Src/main.c    **** 
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 8


 177              		.loc 1 167 36 is_stmt 0 view .LVU45
 178 0040 0494     		str	r4, [sp, #16]
 169:Src/main.c    ****   {
 179              		.loc 1 169 3 is_stmt 1 view .LVU46
 169:Src/main.c    ****   {
 180              		.loc 1 169 7 is_stmt 0 view .LVU47
 181 0042 0021     		movs	r1, #0
 182 0044 01A8     		add	r0, sp, #4
 183 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 184              	.LVL7:
 173:Src/main.c    **** 
 185              		.loc 1 173 1 view .LVU48
 186 004a 12B0     		add	sp, sp, #72
 187              		@ sp needed
 188 004c 10BD     		pop	{r4, pc}
 189              		.cfi_endproc
 190              	.LFE159:
 192              		.section	.text.display_led,"ax",%progbits
 193              		.align	1
 194              		.global	display_led
 195              		.syntax unified
 196              		.code	16
 197              		.thumb_func
 198              		.fpu softvfp
 200              	display_led:
 201              	.LVL8:
 202              	.LFB161:
 201:Src/main.c    **** 
 202:Src/main.c    **** /* USER CODE BEGIN 4 */
 203:Src/main.c    **** 
 204:Src/main.c    **** /**
 205:Src/main.c    ****  * @brief This function turns on the led corresponding to row and col. Note that the origin 
 206:Src/main.c    ****  * for the led matrix is the top left corner of the display.
 207:Src/main.c    ****  */
 208:Src/main.c    **** void display_led(uint16_t row, uint16_t col) {
 203              		.loc 1 208 46 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		.loc 1 208 46 is_stmt 0 view .LVU50
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI4:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 209:Src/main.c    ****   uint16_t cathode = 7 - row;
 213              		.loc 1 209 3 is_stmt 1 view .LVU51
 214              		.loc 1 209 12 is_stmt 0 view .LVU52
 215 0002 0723     		movs	r3, #7
 216 0004 1B1A     		subs	r3, r3, r0
 217 0006 9BB2     		uxth	r3, r3
 218              	.LVL9:
 210:Src/main.c    ****   if (col >= cathode) {
 219              		.loc 1 210 3 is_stmt 1 view .LVU53
 220              		.loc 1 210 6 is_stmt 0 view .LVU54
 221 0008 8B42     		cmp	r3, r1
 222 000a 02D8     		bhi	.L6
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 9


 211:Src/main.c    ****     cathode = ((uint8_t)(6)) - row; 
 223              		.loc 1 211 5 is_stmt 1 view .LVU55
 224              		.loc 1 211 13 is_stmt 0 view .LVU56
 225 000c 0623     		movs	r3, #6
 226              	.LVL10:
 227              		.loc 1 211 13 view .LVU57
 228 000e 1B1A     		subs	r3, r3, r0
 229 0010 9BB2     		uxth	r3, r3
 230              	.LVL11:
 231              	.L6:
 212:Src/main.c    ****   }
 213:Src/main.c    **** 
 214:Src/main.c    ****   GPIOA->MODER = ((0x1UL) << (col * 2u)) | ((0x1UL) << (cathode * 2u)); //  ((0x4000UL) >>(cathode 
 232              		.loc 1 214 3 is_stmt 1 view .LVU58
 233              		.loc 1 214 35 is_stmt 0 view .LVU59
 234 0012 4800     		lsls	r0, r1, #1
 235              	.LVL12:
 236              		.loc 1 214 27 view .LVU60
 237 0014 0122     		movs	r2, #1
 238 0016 1400     		movs	r4, r2
 239 0018 8440     		lsls	r4, r4, r0
 240 001a 2000     		movs	r0, r4
 241              		.loc 1 214 65 view .LVU61
 242 001c 5B00     		lsls	r3, r3, #1
 243              	.LVL13:
 244              		.loc 1 214 53 view .LVU62
 245 001e 1400     		movs	r4, r2
 246 0020 9C40     		lsls	r4, r4, r3
 247 0022 2300     		movs	r3, r4
 248              		.loc 1 214 42 view .LVU63
 249 0024 0343     		orrs	r3, r0
 250              		.loc 1 214 16 view .LVU64
 251 0026 A020     		movs	r0, #160
 252 0028 C005     		lsls	r0, r0, #23
 253 002a 0360     		str	r3, [r0]
 215:Src/main.c    ****   GPIOA->ODR = 0x01 << col;
 254              		.loc 1 215 3 is_stmt 1 view .LVU65
 255              		.loc 1 215 21 is_stmt 0 view .LVU66
 256 002c 8A40     		lsls	r2, r2, r1
 257              		.loc 1 215 14 view .LVU67
 258 002e 4261     		str	r2, [r0, #20]
 216:Src/main.c    **** }
 259              		.loc 1 216 1 view .LVU68
 260              		@ sp needed
 261 0030 10BD     		pop	{r4, pc}
 262              		.cfi_endproc
 263              	.LFE161:
 265              		.section	.text.display_8_bit_frame,"ax",%progbits
 266              		.align	1
 267              		.global	display_8_bit_frame
 268              		.syntax unified
 269              		.code	16
 270              		.thumb_func
 271              		.fpu softvfp
 273              	display_8_bit_frame:
 274              	.LVL14:
 275              	.LFB162:
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 10


 217:Src/main.c    **** 
 218:Src/main.c    **** /**
 219:Src/main.c    ****  * @brief Use to display an 8 bit frame
 220:Src/main.c    ****  */
 221:Src/main.c    **** void display_8_bit_frame(uint8_t msg[7]) {
 276              		.loc 1 221 42 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		.loc 1 221 42 is_stmt 0 view .LVU70
 281 0000 70B5     		push	{r4, r5, r6, lr}
 282              	.LCFI5:
 283              		.cfi_def_cfa_offset 16
 284              		.cfi_offset 4, -16
 285              		.cfi_offset 5, -12
 286              		.cfi_offset 6, -8
 287              		.cfi_offset 14, -4
 288 0002 0600     		movs	r6, r0
 222:Src/main.c    ****   for(uint8_t row = 0; row < 8; row ++ ) {
 289              		.loc 1 222 3 is_stmt 1 view .LVU71
 290              	.LBB3:
 291              		.loc 1 222 7 view .LVU72
 292              	.LVL15:
 293              		.loc 1 222 15 is_stmt 0 view .LVU73
 294 0004 0025     		movs	r5, #0
 295              		.loc 1 222 3 view .LVU74
 296 0006 0EE0     		b	.L8
 297              	.LVL16:
 298              	.L14:
 299              	.LBB4:
 223:Src/main.c    ****     for(uint8_t col = 0; col < 8; col ++ ) {
 224:Src/main.c    ****       if(0x80 & (msg[row] << col)) {
 225:Src/main.c    ****         display_led(row, col);
 300              		.loc 1 225 9 is_stmt 1 view .LVU75
 301 0008 A1B2     		uxth	r1, r4
 302 000a A8B2     		uxth	r0, r5
 303 000c FFF7FEFF 		bl	display_led
 304              	.LVL17:
 305              	.L9:
 223:Src/main.c    ****     for(uint8_t col = 0; col < 8; col ++ ) {
 306              		.loc 1 223 35 discriminator 2 view .LVU76
 223:Src/main.c    ****     for(uint8_t col = 0; col < 8; col ++ ) {
 307              		.loc 1 223 39 is_stmt 0 discriminator 2 view .LVU77
 308 0010 0134     		adds	r4, r4, #1
 309              	.LVL18:
 223:Src/main.c    ****     for(uint8_t col = 0; col < 8; col ++ ) {
 310              		.loc 1 223 39 discriminator 2 view .LVU78
 311 0012 E4B2     		uxtb	r4, r4
 312              	.LVL19:
 313              	.L11:
 223:Src/main.c    ****     for(uint8_t col = 0; col < 8; col ++ ) {
 314              		.loc 1 223 26 is_stmt 1 discriminator 1 view .LVU79
 223:Src/main.c    ****     for(uint8_t col = 0; col < 8; col ++ ) {
 315              		.loc 1 223 5 is_stmt 0 discriminator 1 view .LVU80
 316 0014 072C     		cmp	r4, #7
 317 0016 04D8     		bhi	.L13
 224:Src/main.c    ****         display_led(row, col);
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 11


 318              		.loc 1 224 7 is_stmt 1 view .LVU81
 224:Src/main.c    ****         display_led(row, col);
 319              		.loc 1 224 21 is_stmt 0 view .LVU82
 320 0018 735D     		ldrb	r3, [r6, r5]
 224:Src/main.c    ****         display_led(row, col);
 321              		.loc 1 224 27 view .LVU83
 322 001a A340     		lsls	r3, r3, r4
 224:Src/main.c    ****         display_led(row, col);
 323              		.loc 1 224 9 view .LVU84
 324 001c 1B06     		lsls	r3, r3, #24
 325 001e F7D5     		bpl	.L9
 326 0020 F2E7     		b	.L14
 327              	.L13:
 224:Src/main.c    ****         display_led(row, col);
 328              		.loc 1 224 9 view .LVU85
 329              	.LBE4:
 222:Src/main.c    ****   for(uint8_t row = 0; row < 8; row ++ ) {
 330              		.loc 1 222 33 is_stmt 1 discriminator 2 view .LVU86
 222:Src/main.c    ****   for(uint8_t row = 0; row < 8; row ++ ) {
 331              		.loc 1 222 37 is_stmt 0 discriminator 2 view .LVU87
 332 0022 0135     		adds	r5, r5, #1
 333              	.LVL20:
 222:Src/main.c    ****   for(uint8_t row = 0; row < 8; row ++ ) {
 334              		.loc 1 222 37 discriminator 2 view .LVU88
 335 0024 EDB2     		uxtb	r5, r5
 336              	.LVL21:
 337              	.L8:
 222:Src/main.c    ****   for(uint8_t row = 0; row < 8; row ++ ) {
 338              		.loc 1 222 24 is_stmt 1 discriminator 1 view .LVU89
 222:Src/main.c    ****   for(uint8_t row = 0; row < 8; row ++ ) {
 339              		.loc 1 222 3 is_stmt 0 discriminator 1 view .LVU90
 340 0026 072D     		cmp	r5, #7
 341 0028 01D8     		bhi	.L15
 342              	.LBB5:
 223:Src/main.c    ****     for(uint8_t col = 0; col < 8; col ++ ) {
 343              		.loc 1 223 17 view .LVU91
 344 002a 0024     		movs	r4, #0
 345 002c F2E7     		b	.L11
 346              	.L15:
 347              	.LBE5:
 348              	.LBE3:
 226:Src/main.c    ****       }
 227:Src/main.c    ****     }
 228:Src/main.c    ****   }
 229:Src/main.c    **** }
 349              		.loc 1 229 1 view .LVU92
 350              		@ sp needed
 351              	.LVL22:
 352              	.LVL23:
 353              		.loc 1 229 1 view .LVU93
 354 002e 70BD     		pop	{r4, r5, r6, pc}
 355              		.cfi_endproc
 356              	.LFE162:
 358              		.section	.text.main,"ax",%progbits
 359              		.align	1
 360              		.global	main
 361              		.syntax unified
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 12


 362              		.code	16
 363              		.thumb_func
 364              		.fpu softvfp
 366              	main:
 367              	.LFB158:
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
 368              		.loc 1 92 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 10B5     		push	{r4, lr}
 373              	.LCFI6:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
 100:Src/main.c    **** 
 377              		.loc 1 100 3 view .LVU95
 378 0002 FFF7FEFF 		bl	HAL_Init
 379              	.LVL24:
 107:Src/main.c    **** 
 380              		.loc 1 107 3 view .LVU96
 381 0006 FFF7FEFF 		bl	SystemClock_Config
 382              	.LVL25:
 114:Src/main.c    ****   /* USER CODE BEGIN 2 */
 383              		.loc 1 114 3 view .LVU97
 384 000a FFF7FEFF 		bl	MX_GPIO_Init
 385              	.LVL26:
 386              	.L21:
 121:Src/main.c    ****   {
 387              		.loc 1 121 3 view .LVU98
 126:Src/main.c    ****       display_8_bit_frame(smile);
 388              		.loc 1 126 5 view .LVU99
 389              	.LBB6:
 126:Src/main.c    ****       display_8_bit_frame(smile);
 390              		.loc 1 126 9 view .LVU100
 126:Src/main.c    ****       display_8_bit_frame(smile);
 391              		.loc 1 126 13 is_stmt 0 view .LVU101
 392 000e 0024     		movs	r4, #0
 393              	.LVL27:
 394              	.L17:
 126:Src/main.c    ****       display_8_bit_frame(smile);
 395              		.loc 1 126 20 is_stmt 1 discriminator 1 view .LVU102
 126:Src/main.c    ****       display_8_bit_frame(smile);
 396              		.loc 1 126 5 is_stmt 0 discriminator 1 view .LVU103
 397 0010 084B     		ldr	r3, .L23
 398 0012 9C42     		cmp	r4, r3
 399 0014 04DC     		bgt	.L22
 127:Src/main.c    ****     }
 400              		.loc 1 127 7 is_stmt 1 discriminator 3 view .LVU104
 401 0016 0848     		ldr	r0, .L23+4
 402 0018 FFF7FEFF 		bl	display_8_bit_frame
 403              	.LVL28:
 126:Src/main.c    ****       display_8_bit_frame(smile);
 404              		.loc 1 126 31 discriminator 3 view .LVU105
 126:Src/main.c    ****       display_8_bit_frame(smile);
 405              		.loc 1 126 33 is_stmt 0 discriminator 3 view .LVU106
 406 001c 0134     		adds	r4, r4, #1
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 13


 407              	.LVL29:
 126:Src/main.c    ****       display_8_bit_frame(smile);
 408              		.loc 1 126 33 discriminator 3 view .LVU107
 409 001e F7E7     		b	.L17
 410              	.L22:
 126:Src/main.c    ****       display_8_bit_frame(smile);
 411              		.loc 1 126 33 discriminator 3 view .LVU108
 412              	.LBE6:
 413              	.LBB7:
 130:Src/main.c    ****       display_8_bit_frame(hi);
 414              		.loc 1 130 13 view .LVU109
 415 0020 0024     		movs	r4, #0
 416              	.LVL30:
 417              	.L19:
 130:Src/main.c    ****       display_8_bit_frame(hi);
 418              		.loc 1 130 20 is_stmt 1 discriminator 1 view .LVU110
 130:Src/main.c    ****       display_8_bit_frame(hi);
 419              		.loc 1 130 5 is_stmt 0 discriminator 1 view .LVU111
 420 0022 044B     		ldr	r3, .L23
 421 0024 9C42     		cmp	r4, r3
 422 0026 F2DC     		bgt	.L21
 131:Src/main.c    ****     }
 423              		.loc 1 131 7 is_stmt 1 discriminator 3 view .LVU112
 424 0028 0448     		ldr	r0, .L23+8
 425 002a FFF7FEFF 		bl	display_8_bit_frame
 426              	.LVL31:
 130:Src/main.c    ****       display_8_bit_frame(hi);
 427              		.loc 1 130 31 discriminator 3 view .LVU113
 130:Src/main.c    ****       display_8_bit_frame(hi);
 428              		.loc 1 130 33 is_stmt 0 discriminator 3 view .LVU114
 429 002e 0134     		adds	r4, r4, #1
 430              	.LVL32:
 130:Src/main.c    ****       display_8_bit_frame(hi);
 431              		.loc 1 130 33 discriminator 3 view .LVU115
 432 0030 F7E7     		b	.L19
 433              	.L24:
 434 0032 C046     		.align	2
 435              	.L23:
 436 0034 0F270000 		.word	9999
 437 0038 00000000 		.word	.LANCHOR0
 438 003c 00000000 		.word	.LANCHOR1
 439              	.LBE7:
 440              		.cfi_endproc
 441              	.LFE158:
 443              		.section	.text.Error_Handler,"ax",%progbits
 444              		.align	1
 445              		.global	Error_Handler
 446              		.syntax unified
 447              		.code	16
 448              		.thumb_func
 449              		.fpu softvfp
 451              	Error_Handler:
 452              	.LFB163:
 230:Src/main.c    **** 
 231:Src/main.c    **** /* USER CODE END 4 */
 232:Src/main.c    **** 
 233:Src/main.c    **** /**
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 14


 234:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 235:Src/main.c    ****   * @retval None
 236:Src/main.c    ****   */
 237:Src/main.c    **** void Error_Handler(void)
 238:Src/main.c    **** {
 453              		.loc 1 238 1 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 239:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 240:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 241:Src/main.c    **** 
 242:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 243:Src/main.c    **** }
 458              		.loc 1 243 1 view .LVU117
 459              		@ sp needed
 460 0000 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE163:
 464              		.global	hi
 465              		.global	smile
 466              		.section	.rodata.hi,"a"
 467              		.align	2
 468              		.set	.LANCHOR1,. + 0
 471              	hi:
 472 0000 979292F2 		.ascii	"\227\222\222\362\222\222\227"
 472      929297
 473              		.section	.rodata.smile,"a"
 474              		.align	2
 475              		.set	.LANCHOR0,. + 0
 478              	smile:
 479 0000 00666600 		.ascii	"\000ff\000B~\000"
 479      427E00
 480              		.text
 481              	.Letext0:
 482              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 483              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 484              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 485              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 486              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 487              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 488              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 489              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 490              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 491              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 492              		.file 12 "<built-in>"
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:16     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:97     .text.MX_GPIO_Init:0000000000000048 $d
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:102    .text.SystemClock_Config:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:109    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:193    .text.display_led:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:200    .text.display_led:0000000000000000 display_led
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:266    .text.display_8_bit_frame:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:273    .text.display_8_bit_frame:0000000000000000 display_8_bit_frame
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:359    .text.main:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:366    .text.main:0000000000000000 main
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:436    .text.main:0000000000000034 $d
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:444    .text.Error_Handler:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:451    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:471    .rodata.hi:0000000000000000 hi
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:478    .rodata.smile:0000000000000000 smile
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:467    .rodata.hi:0000000000000000 $d
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccT0G2hg.s:474    .rodata.smile:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
