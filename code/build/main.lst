ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB160:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN PV */
  46:Src/main.c    **** 
  47:Src/main.c    **** const uint16_t pins[8] = {PINA_Pin, PINB_Pin, PINC_Pin, PIND_Pin, PINE_Pin, PINF_Pin, PING_Pin, PIN
  48:Src/main.c    **** void print_column(uint16_t column);
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** static void MX_GPIO_Init(void);
  55:Src/main.c    **** /* USER CODE BEGIN PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /**
  65:Src/main.c    ****   * @brief  The application entry point.
  66:Src/main.c    ****   * @retval int
  67:Src/main.c    ****   */
  68:Src/main.c    **** int main(void)
  69:Src/main.c    **** {
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END SysInit */
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Initialize all configured peripherals */
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 3


  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 2 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Infinite loop */
  97:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  98:Src/main.c    ****   while (1)
  99:Src/main.c    ****   {
 100:Src/main.c    ****     /* USER CODE END WHILE */
 101:Src/main.c    **** 
 102:Src/main.c    ****     /* USER CODE BEGIN 3 */
 103:Src/main.c    ****     for (int i = 0; i < 7; i ++) {
 104:Src/main.c    ****       print_column((uint16_t)(i));
 105:Src/main.c    ****     }
 106:Src/main.c    **** 
 107:Src/main.c    ****   }
 108:Src/main.c    ****   /* USER CODE END 3 */
 109:Src/main.c    **** }
 110:Src/main.c    **** 
 111:Src/main.c    **** /**
 112:Src/main.c    ****   * @brief System Clock Configuration
 113:Src/main.c    ****   * @retval None
 114:Src/main.c    ****   */
 115:Src/main.c    **** void SystemClock_Config(void)
 116:Src/main.c    **** {
 117:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119:Src/main.c    **** 
 120:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 121:Src/main.c    ****   */
 122:Src/main.c    ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 123:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 124:Src/main.c    ****   */
 125:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 126:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 127:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 128:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 130:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Src/main.c    ****   {
 132:Src/main.c    ****     Error_Handler();
 133:Src/main.c    ****   }
 134:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 135:Src/main.c    ****   */
 136:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 137:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 138:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 139:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 141:Src/main.c    **** 
 142:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 143:Src/main.c    ****   {
 144:Src/main.c    ****     Error_Handler();
 145:Src/main.c    ****   }
 146:Src/main.c    **** }
 147:Src/main.c    **** 
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 4


 148:Src/main.c    **** /**
 149:Src/main.c    ****   * @brief GPIO Initialization Function
 150:Src/main.c    ****   * @param None
 151:Src/main.c    ****   * @retval None
 152:Src/main.c    ****   */
 153:Src/main.c    **** static void MX_GPIO_Init(void)
 154:Src/main.c    **** {
  26              		.loc 1 154 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 155:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 155 3 view .LVU1
  40              		.loc 1 155 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 01A8     		add	r0, sp, #4
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* GPIO Ports Clock Enable */
 158:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  46              		.loc 1 158 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 158 3 view .LVU4
  49              		.loc 1 158 3 view .LVU5
  50 000e 0E4B     		ldr	r3, .L2
  51 0010 5A6B     		ldr	r2, [r3, #52]
  52 0012 0124     		movs	r4, #1
  53 0014 2243     		orrs	r2, r4
  54 0016 5A63     		str	r2, [r3, #52]
  55              		.loc 1 158 3 view .LVU6
  56 0018 5B6B     		ldr	r3, [r3, #52]
  57 001a 2340     		ands	r3, r4
  58 001c 0093     		str	r3, [sp]
  59              		.loc 1 158 3 view .LVU7
  60 001e 009B     		ldr	r3, [sp]
  61              	.LBE2:
  62              		.loc 1 158 3 view .LVU8
 159:Src/main.c    **** 
 160:Src/main.c    ****   /*Configure GPIO pin Output Level */
 161:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, PINA_Pin|PINB_Pin|PINC_Pin|PIND_Pin 
  63              		.loc 1 161 3 view .LVU9
  64 0020 A025     		movs	r5, #160
  65 0022 ED05     		lsls	r5, r5, #23
  66 0024 0022     		movs	r2, #0
  67 0026 FF21     		movs	r1, #255
  68 0028 2800     		movs	r0, r5
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 5


  69 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  70              	.LVL1:
 162:Src/main.c    ****                           |PINE_Pin|PINF_Pin|PING_Pin|PINH_Pin, GPIO_PIN_RESET);
 163:Src/main.c    **** 
 164:Src/main.c    ****   /*Configure GPIO pins : PINA_Pin PINB_Pin PINC_Pin PIND_Pin 
 165:Src/main.c    ****                            PINE_Pin PINF_Pin PING_Pin PINH_Pin */
 166:Src/main.c    ****   GPIO_InitStruct.Pin = PINA_Pin|PINB_Pin|PINC_Pin|PIND_Pin 
  71              		.loc 1 166 3 view .LVU10
  72              		.loc 1 166 23 is_stmt 0 view .LVU11
  73 002e FF23     		movs	r3, #255
  74 0030 0193     		str	r3, [sp, #4]
 167:Src/main.c    ****                           |PINE_Pin|PINF_Pin|PING_Pin|PINH_Pin;
 168:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  75              		.loc 1 168 3 is_stmt 1 view .LVU12
  76              		.loc 1 168 24 is_stmt 0 view .LVU13
  77 0032 0294     		str	r4, [sp, #8]
 169:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  78              		.loc 1 169 3 is_stmt 1 view .LVU14
  79              		.loc 1 169 24 is_stmt 0 view .LVU15
  80 0034 0023     		movs	r3, #0
  81 0036 0393     		str	r3, [sp, #12]
 170:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  82              		.loc 1 170 3 is_stmt 1 view .LVU16
  83              		.loc 1 170 25 is_stmt 0 view .LVU17
  84 0038 0493     		str	r3, [sp, #16]
 171:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  85              		.loc 1 171 3 is_stmt 1 view .LVU18
  86 003a 01A9     		add	r1, sp, #4
  87 003c 2800     		movs	r0, r5
  88 003e FFF7FEFF 		bl	HAL_GPIO_Init
  89              	.LVL2:
 172:Src/main.c    **** 
 173:Src/main.c    **** }
  90              		.loc 1 173 1 is_stmt 0 view .LVU19
  91 0042 07B0     		add	sp, sp, #28
  92              		@ sp needed
  93 0044 30BD     		pop	{r4, r5, pc}
  94              	.L3:
  95 0046 C046     		.align	2
  96              	.L2:
  97 0048 00100240 		.word	1073876992
  98              		.cfi_endproc
  99              	.LFE160:
 101              		.section	.text.SystemClock_Config,"ax",%progbits
 102              		.align	1
 103              		.global	SystemClock_Config
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 107              		.fpu softvfp
 109              	SystemClock_Config:
 110              	.LFB159:
 116:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 111              		.loc 1 116 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 72
 114              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 6


 115 0000 10B5     		push	{r4, lr}
 116              	.LCFI2:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
 120 0002 92B0     		sub	sp, sp, #72
 121              	.LCFI3:
 122              		.cfi_def_cfa_offset 80
 117:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 117 3 view .LVU21
 117:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124              		.loc 1 117 22 is_stmt 0 view .LVU22
 125 0004 3422     		movs	r2, #52
 126 0006 0021     		movs	r1, #0
 127 0008 05A8     		add	r0, sp, #20
 128 000a FFF7FEFF 		bl	memset
 129              	.LVL3:
 118:Src/main.c    **** 
 130              		.loc 1 118 3 is_stmt 1 view .LVU23
 118:Src/main.c    **** 
 131              		.loc 1 118 22 is_stmt 0 view .LVU24
 132 000e 1022     		movs	r2, #16
 133 0010 0021     		movs	r1, #0
 134 0012 01A8     		add	r0, sp, #4
 135 0014 FFF7FEFF 		bl	memset
 136              	.LVL4:
 122:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 137              		.loc 1 122 3 is_stmt 1 view .LVU25
 138 0018 8020     		movs	r0, #128
 139 001a 8000     		lsls	r0, r0, #2
 140 001c FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 141              	.LVL5:
 125:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 142              		.loc 1 125 3 view .LVU26
 125:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 143              		.loc 1 125 36 is_stmt 0 view .LVU27
 144 0020 0223     		movs	r3, #2
 145 0022 0593     		str	r3, [sp, #20]
 126:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 146              		.loc 1 126 3 is_stmt 1 view .LVU28
 126:Src/main.c    ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 147              		.loc 1 126 30 is_stmt 0 view .LVU29
 148 0024 FE33     		adds	r3, r3, #254
 149 0026 0893     		str	r3, [sp, #32]
 127:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 150              		.loc 1 127 3 is_stmt 1 view .LVU30
 127:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 151              		.loc 1 127 28 is_stmt 0 view .LVU31
 152 0028 0024     		movs	r4, #0
 153 002a 0994     		str	r4, [sp, #36]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 154              		.loc 1 128 3 is_stmt 1 view .LVU32
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 155              		.loc 1 128 41 is_stmt 0 view .LVU33
 156 002c C03B     		subs	r3, r3, #192
 157 002e 0A93     		str	r3, [sp, #40]
 129:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 7


 158              		.loc 1 129 3 is_stmt 1 view .LVU34
 129:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159              		.loc 1 129 34 is_stmt 0 view .LVU35
 160 0030 0C94     		str	r4, [sp, #48]
 130:Src/main.c    ****   {
 161              		.loc 1 130 3 is_stmt 1 view .LVU36
 130:Src/main.c    ****   {
 162              		.loc 1 130 7 is_stmt 0 view .LVU37
 163 0032 05A8     		add	r0, sp, #20
 164 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 165              	.LVL6:
 136:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 166              		.loc 1 136 3 is_stmt 1 view .LVU38
 136:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 167              		.loc 1 136 31 is_stmt 0 view .LVU39
 168 0038 0723     		movs	r3, #7
 169 003a 0193     		str	r3, [sp, #4]
 138:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170              		.loc 1 138 3 is_stmt 1 view .LVU40
 138:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171              		.loc 1 138 34 is_stmt 0 view .LVU41
 172 003c 0294     		str	r4, [sp, #8]
 139:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 173              		.loc 1 139 3 is_stmt 1 view .LVU42
 139:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 174              		.loc 1 139 35 is_stmt 0 view .LVU43
 175 003e 0394     		str	r4, [sp, #12]
 140:Src/main.c    **** 
 176              		.loc 1 140 3 is_stmt 1 view .LVU44
 140:Src/main.c    **** 
 177              		.loc 1 140 36 is_stmt 0 view .LVU45
 178 0040 0494     		str	r4, [sp, #16]
 142:Src/main.c    ****   {
 179              		.loc 1 142 3 is_stmt 1 view .LVU46
 142:Src/main.c    ****   {
 180              		.loc 1 142 7 is_stmt 0 view .LVU47
 181 0042 0021     		movs	r1, #0
 182 0044 01A8     		add	r0, sp, #4
 183 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 184              	.LVL7:
 146:Src/main.c    **** 
 185              		.loc 1 146 1 view .LVU48
 186 004a 12B0     		add	sp, sp, #72
 187              		@ sp needed
 188 004c 10BD     		pop	{r4, pc}
 189              		.cfi_endproc
 190              	.LFE159:
 192              		.section	.text.reset_mode,"ax",%progbits
 193              		.align	1
 194              		.global	reset_mode
 195              		.syntax unified
 196              		.code	16
 197              		.thumb_func
 198              		.fpu softvfp
 200              	reset_mode:
 201              	.LVL8:
 202              	.LFB161:
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 8


 174:Src/main.c    **** 
 175:Src/main.c    **** 
 176:Src/main.c    **** void reset_mode(uint16_t pin) {
 203              		.loc 1 176 31 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 177:Src/main.c    ****   GPIOA->MODER &= ~(GPIO_MODER_MODE0 << (pin * 2u));
 208              		.loc 1 177 3 view .LVU50
 209              		.loc 1 177 16 is_stmt 0 view .LVU51
 210 0000 A021     		movs	r1, #160
 211 0002 C905     		lsls	r1, r1, #23
 212 0004 0B68     		ldr	r3, [r1]
 213              		.loc 1 177 46 view .LVU52
 214 0006 4000     		lsls	r0, r0, #1
 215              	.LVL9:
 216              		.loc 1 177 38 view .LVU53
 217 0008 0322     		movs	r2, #3
 218 000a 8240     		lsls	r2, r2, r0
 219              		.loc 1 177 16 view .LVU54
 220 000c 9343     		bics	r3, r2
 221 000e 0B60     		str	r3, [r1]
 178:Src/main.c    **** }
 222              		.loc 1 178 1 view .LVU55
 223              		@ sp needed
 224 0010 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE161:
 228              		.section	.text.set_output_pp,"ax",%progbits
 229              		.align	1
 230              		.global	set_output_pp
 231              		.syntax unified
 232              		.code	16
 233              		.thumb_func
 234              		.fpu softvfp
 236              	set_output_pp:
 237              	.LVL10:
 238              	.LFB162:
 179:Src/main.c    **** 
 180:Src/main.c    **** void set_output_pp(uint16_t pin) {
 239              		.loc 1 180 34 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 181:Src/main.c    ****   GPIOA->MODER |= ((GPIO_MODE_OUTPUT_PP & 0x00000003u) << (pin * 2u));
 244              		.loc 1 181 3 view .LVU57
 245              		.loc 1 181 16 is_stmt 0 view .LVU58
 246 0000 A021     		movs	r1, #160
 247 0002 C905     		lsls	r1, r1, #23
 248 0004 0B68     		ldr	r3, [r1]
 249              		.loc 1 181 64 view .LVU59
 250 0006 4000     		lsls	r0, r0, #1
 251              	.LVL11:
 252              		.loc 1 181 56 view .LVU60
 253 0008 0122     		movs	r2, #1
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 9


 254 000a 8240     		lsls	r2, r2, r0
 255              		.loc 1 181 16 view .LVU61
 256 000c 1343     		orrs	r3, r2
 257 000e 0B60     		str	r3, [r1]
 182:Src/main.c    **** }
 258              		.loc 1 182 1 view .LVU62
 259              		@ sp needed
 260 0010 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE162:
 264              		.section	.text.print_column,"ax",%progbits
 265              		.align	1
 266              		.global	print_column
 267              		.syntax unified
 268              		.code	16
 269              		.thumb_func
 270              		.fpu softvfp
 272              	print_column:
 273              	.LVL12:
 274              	.LFB163:
 183:Src/main.c    **** /* USER CODE BEGIN 4 */
 184:Src/main.c    **** void print_column(uint16_t row) {
 275              		.loc 1 184 33 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		.loc 1 184 33 is_stmt 0 view .LVU64
 280 0000 70B5     		push	{r4, r5, r6, lr}
 281              	.LCFI4:
 282              		.cfi_def_cfa_offset 16
 283              		.cfi_offset 4, -16
 284              		.cfi_offset 5, -12
 285              		.cfi_offset 6, -8
 286              		.cfi_offset 14, -4
 287 0002 0400     		movs	r4, r0
 185:Src/main.c    ****   set_output_pp(row);
 288              		.loc 1 185 3 is_stmt 1 view .LVU65
 289 0004 FFF7FEFF 		bl	set_output_pp
 290              	.LVL13:
 186:Src/main.c    ****   GPIOA->BSRR = 0x1 << row;
 291              		.loc 1 186 3 view .LVU66
 292              		.loc 1 186 21 is_stmt 0 view .LVU67
 293 0008 0125     		movs	r5, #1
 294 000a A540     		lsls	r5, r5, r4
 295              		.loc 1 186 15 view .LVU68
 296 000c A026     		movs	r6, #160
 297 000e F605     		lsls	r6, r6, #23
 298 0010 B561     		str	r5, [r6, #24]
 187:Src/main.c    ****   HAL_Delay(100);
 299              		.loc 1 187 3 is_stmt 1 view .LVU69
 300 0012 6420     		movs	r0, #100
 301 0014 FFF7FEFF 		bl	HAL_Delay
 302              	.LVL14:
 188:Src/main.c    ****   GPIOA->BRR = 0x1 << row;
 303              		.loc 1 188 3 view .LVU70
 304              		.loc 1 188 14 is_stmt 0 view .LVU71
 305 0018 B562     		str	r5, [r6, #40]
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 10


 189:Src/main.c    ****   reset_mode(row);
 306              		.loc 1 189 3 is_stmt 1 view .LVU72
 307 001a 2000     		movs	r0, r4
 308 001c FFF7FEFF 		bl	reset_mode
 309              	.LVL15:
 190:Src/main.c    **** }
 310              		.loc 1 190 1 is_stmt 0 view .LVU73
 311              		@ sp needed
 312 0020 70BD     		pop	{r4, r5, r6, pc}
 313              		.cfi_endproc
 314              	.LFE163:
 316              		.section	.text.main,"ax",%progbits
 317              		.align	1
 318              		.global	main
 319              		.syntax unified
 320              		.code	16
 321              		.thumb_func
 322              		.fpu softvfp
 324              	main:
 325              	.LFB158:
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
 326              		.loc 1 69 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330 0000 10B5     		push	{r4, lr}
 331              	.LCFI5:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 4, -8
 334              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 335              		.loc 1 77 3 view .LVU75
 336 0002 FFF7FEFF 		bl	HAL_Init
 337              	.LVL16:
  84:Src/main.c    **** 
 338              		.loc 1 84 3 view .LVU76
 339 0006 FFF7FEFF 		bl	SystemClock_Config
 340              	.LVL17:
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
 341              		.loc 1 91 3 view .LVU77
 342 000a FFF7FEFF 		bl	MX_GPIO_Init
 343              	.LVL18:
 344 000e 05E0     		b	.L11
 345              	.LVL19:
 346              	.L10:
 347              	.LBB3:
 104:Src/main.c    ****     }
 348              		.loc 1 104 7 discriminator 3 view .LVU78
 349 0010 A0B2     		uxth	r0, r4
 350 0012 FFF7FEFF 		bl	print_column
 351              	.LVL20:
 103:Src/main.c    ****       print_column((uint16_t)(i));
 352              		.loc 1 103 28 discriminator 3 view .LVU79
 103:Src/main.c    ****       print_column((uint16_t)(i));
 353              		.loc 1 103 30 is_stmt 0 discriminator 3 view .LVU80
 354 0016 0134     		adds	r4, r4, #1
 355              	.LVL21:
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 11


 356              	.L9:
 103:Src/main.c    ****       print_column((uint16_t)(i));
 357              		.loc 1 103 21 is_stmt 1 discriminator 1 view .LVU81
 103:Src/main.c    ****       print_column((uint16_t)(i));
 358              		.loc 1 103 5 is_stmt 0 discriminator 1 view .LVU82
 359 0018 062C     		cmp	r4, #6
 360 001a F9DD     		ble	.L10
 361              	.LVL22:
 362              	.L11:
 103:Src/main.c    ****       print_column((uint16_t)(i));
 363              		.loc 1 103 5 discriminator 1 view .LVU83
 364              	.LBE3:
  98:Src/main.c    ****   {
 365              		.loc 1 98 3 is_stmt 1 view .LVU84
 103:Src/main.c    ****       print_column((uint16_t)(i));
 366              		.loc 1 103 5 view .LVU85
 367              	.LBB4:
 103:Src/main.c    ****       print_column((uint16_t)(i));
 368              		.loc 1 103 10 view .LVU86
 103:Src/main.c    ****       print_column((uint16_t)(i));
 369              		.loc 1 103 14 is_stmt 0 view .LVU87
 370 001c 0024     		movs	r4, #0
 103:Src/main.c    ****       print_column((uint16_t)(i));
 371              		.loc 1 103 5 view .LVU88
 372 001e FBE7     		b	.L9
 373              	.LBE4:
 374              		.cfi_endproc
 375              	.LFE158:
 377              		.section	.text.Error_Handler,"ax",%progbits
 378              		.align	1
 379              		.global	Error_Handler
 380              		.syntax unified
 381              		.code	16
 382              		.thumb_func
 383              		.fpu softvfp
 385              	Error_Handler:
 386              	.LFB164:
 191:Src/main.c    **** /* USER CODE END 4 */
 192:Src/main.c    **** 
 193:Src/main.c    **** /**
 194:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 195:Src/main.c    ****   * @retval None
 196:Src/main.c    ****   */
 197:Src/main.c    **** void Error_Handler(void)
 198:Src/main.c    **** {
 387              		.loc 1 198 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 199:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 200:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 201:Src/main.c    **** 
 202:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 203:Src/main.c    **** }
 392              		.loc 1 203 1 view .LVU90
 393              		@ sp needed
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 12


 394 0000 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE164:
 398              		.global	pins
 399              		.section	.rodata.pins,"a"
 400              		.align	2
 403              	pins:
 404 0000 0100     		.short	1
 405 0002 0200     		.short	2
 406 0004 0400     		.short	4
 407 0006 0800     		.short	8
 408 0008 1000     		.short	16
 409 000a 2000     		.short	32
 410 000c 4000     		.short	64
 411 000e 8000     		.short	128
 412              		.text
 413              	.Letext0:
 414              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 415              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 416              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 417              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 418              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 419              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 420              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 421              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 422              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 423              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 424              		.file 12 "<built-in>"
ARM GAS  /var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:16     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:97     .text.MX_GPIO_Init:0000000000000048 $d
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:102    .text.SystemClock_Config:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:109    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:193    .text.reset_mode:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:200    .text.reset_mode:0000000000000000 reset_mode
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:229    .text.set_output_pp:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:236    .text.set_output_pp:0000000000000000 set_output_pp
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:265    .text.print_column:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:272    .text.print_column:0000000000000000 print_column
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:317    .text.main:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:324    .text.main:0000000000000000 main
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:378    .text.Error_Handler:0000000000000000 $t
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:385    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:403    .rodata.pins:0000000000000000 pins
/var/folders/j2/07tr89tn2r16dm4cxglllf3h0000gn/T//ccV6xogQ.s:400    .rodata.pins:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Delay
HAL_Init
